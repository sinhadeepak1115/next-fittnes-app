generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  email         String?   @unique
  createdAt     DateTime  @default(now())
  emailVerified DateTime?
  image         String?
  name          String?
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  Workout       Workout[]
  Note          Note[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Workout {
  id           String   @id @default(cuid())
  workoutName  String
  date         String
  time         Int
  reps         Int
  sets         Int
  height       Int
  trainerName  String
  weightAfter  Int
  weightBefore Int
  createdAt    DateTime @default(now())
  authorEmail  String?
  author       User?    @relation(fields: [authorEmail], references: [email])
  Note         Note[]
}

model Note {
  id          String   @id @default(cuid())
  content     String
  createdAt   DateTime @default(now())
  workoutId   String?
  authorEmail String?
  author      User?    @relation(fields: [authorEmail], references: [email])
  Workout     Workout? @relation(fields: [workoutId], references: [id])
}
